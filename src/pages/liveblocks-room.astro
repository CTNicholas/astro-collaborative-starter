---
import LiveblocksRoom from '../lib/LiveblocksRoom.astro'
import LiveUserForm from '../lib/LiveUserForm.astro'
import RandomUserInfo from '../lib/RandomUserInfo.astro'
import BaseLayout from '../layouts/BaseLayout.astro'
import PanelLayout from '../layouts/PanelLayout.astro'
import Link from '../components/Link.astro'
import Demo from '../components/Demo.astro'
import Code from '../components/Code.astro'
import Title from '../components/Title.astro'
import TitleSmall from '../components/TitleSmall.astro'
import Paragraph from '../components/Paragraph.astro'
import InputText from '../components/InputText.astro'
import ComponentGrid from '../components/ComponentGrid.astro'
import { randomName, randomColor, randomPicture, randomStatus } from '../lib/utils/random'
import GetPublicKey from '../components/GetPublicKey.astro'

// Get your free public key from https://liveblocks.io
const key = import.meta.env.PUBLIC_LIVEBLOCKS_PUBLIC_KEY

// The name of the current room
const roomId =  'astro-collaborative-starter-live-cursors'
---

<BaseLayout>
  <RandomUserInfo></RandomUserInfo>
  <LiveblocksRoom
    room-id={roomId}
    public-key={key}
  >
    <PanelLayout>
      <Title text="Liveblocks Room">
        Enable multiplayer with &lt;LiveblocksRoom&gt;, powered by powered by
        <Link href="https://liveblocks.io" newTab>Liveblocks</Link>
      </Title>


      <TitleSmall>
        Get your free API key
      </TitleSmall>
      <GetPublicKey />

      <TitleSmall>
        Wrap your app
      </TitleSmall>

      <Paragraph>
        You can use &lt;LiveblocksRoom&gt; to create a multiplayer room and enable every other component.
      </Paragraph>

      <Code lang="astro" code={`---
const key = import.meta.env.PUBLIC_LIVEBLOCKS_PUBLIC_KEY

// The name of the multiplayer room
const roomId = 'my-room'
---
<LiveblocksRoom
  roomId={roomId}
  public-key={key}
>
  <!-- Place all multiplayer components inside -->
</LiveblocksRoom>
`}/>

      <TitleSmall>
        How to use
      </TitleSmall>

      <Paragraph>
        Set the current user's properties (name, color etc.) using child input elements.
        Updates are propagated on 'input' events. Not just compatible with text inputs.
      </Paragraph>

<Code lang="astro" code={`---
import LiveblocksRoom from '../lib/LiveblocksRoom.astro'
---
<!-- Default user settings -->
<LiveblocksRoom
  room-id="my-room"
  public-key="pk_live_xxxxxxxxxxxxxxxxxxxxxxxxx"
>
  <!-- Multiplayer components inside -->
</LiveblocksRoom>

<!-- Setting user properties by attribute -->
<LiveblocksRoom
  room-id="my-room"
  public-key="pk_live_xxxxxxxxxxxxxxxxxxxxxxxxx"
  user-name="Chris"
  user-color="#00ff00"
  user-picture="/url-of-img.png"
  user-status="In a call"
>
  <!-- Multiplayer components inside -->
</LiveblocksRoom>`} />

or
<Code lang="astro" code={`---
import LiveblocksRoom from '../lib/liveblocks-room'
---
<!-- Default user settings -->
<liveblocks-room
  room-id="my-room"
  public-key="pk_live_xxxxxxxxxxxxxxxxxxxxxxxxx"
  client:load
>
  <!-- Multiplayer components inside -->
</liveblocks-room>

<!-- Setting user properties by attribute -->
<liveblocks-room
  room-id="my-room"
  public-key="pk_live_xxxxxxxxxxxxxxxxxxxxxxxxx"
  user-name="Chris"
  user-color="#00ff00"
  user-picture="/url-of-img.png"
  user-status="In a call"
  client:load
>
  <!-- Multiplayer components inside -->
</liveblocks-room>`} />

      <TitleSmall>
        Add multiplayer components
      </TitleSmall>
      <ComponentGrid />

    </PanelLayout>
  </LiveblocksRoom>
</BaseLayout>
